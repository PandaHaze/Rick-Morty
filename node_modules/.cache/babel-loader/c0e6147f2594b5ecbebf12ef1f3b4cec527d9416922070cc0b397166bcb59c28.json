{"ast":null,"code":"import Loading from '../components/Loading.vue';\nimport axios from 'axios';\nexport default {\n  name: 'app',\n  components: {\n    Loading\n  },\n  data() {\n    return {\n      characters: [],\n      filterSearch: [],\n      isLoading: true,\n      headers: [{\n        text: 'Imagen',\n        value: 'image'\n      }, {\n        text: 'Nombre',\n        value: 'name'\n      }, {\n        text: 'Especie',\n        value: 'species'\n      }, {\n        text: 'Status',\n        value: 'status'\n      }],\n      viewMode: 'cards',\n      tableView: true\n    };\n  },\n  mounted() {\n    this.loadCharacters();\n  },\n  methods: {\n    loadCharacters() {\n      axios.get('https://rickandmortyapi.com/api/character').then(response => {\n        this.characters = response.data.results;\n        this.filterSearch = this.characters;\n        setTimeout(() => {\n          this.isLoading = false;\n        }, 500);\n      }).catch(error => {\n        console.error(error);\n        this.isLoading = false;\n      });\n    },\n    scrollToTop() {\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      });\n    },\n    filterCharacters() {\n      this.filterSearch = this.characters.filter(character => character.name.toLowerCase().includes(this.search.toLowerCase()));\n    },\n    getCharacterStatusClass(character) {\n      if (character.status === 'Alive') {\n        return 'character-green';\n      } else if (character.status === 'Dead') {\n        return 'character-red';\n      } else {\n        return 'character-gray';\n      }\n    },\n    toggleViewMode() {\n      this.viewMode = this.viewMode === 'cards' ? 'table' : 'cards';\n    }\n  }\n};","map":{"version":3,"names":["Loading","axios","name","components","data","characters","filterSearch","isLoading","headers","text","value","viewMode","tableView","mounted","loadCharacters","methods","get","then","response","results","setTimeout","catch","error","console","scrollToTop","window","scrollTo","top","behavior","filterCharacters","filter","character","toLowerCase","includes","search","getCharacterStatusClass","status","toggleViewMode"],"sources":["src/views/HomeView.vue"],"sourcesContent":["<template>\n  <v-app>\n    <Loading v-if=\"isLoading\"></Loading>\n    <div v-else>\n      <v-btn-toggle v-model=\"viewMode\" mandatory>\n        <v-btn :value=\"'cards'\" color=\"lime mt-3 ml-4\" @click=\"toggleViewMode('cards')\">Vista Cards</v-btn>\n        <v-btn :value=\"'table'\" color=\"lime mt-3\" @click=\"toggleViewMode('table')\">Vista Tabla</v-btn>\n      </v-btn-toggle>\n      <v-text-field\n        v-model=\"search\"\n        label=\"Search\"\n        class=\"mx-4 mt-5\"\n        outlined\n        color=\"#00C853\"\n        @input=\"filterCharacters\"\n      ></v-text-field>\n\n      <div v-if=\"viewMode === 'cards'\">\n        <div class=\"content\">\n          <v-card v-for=\"character in filterSearch\" :key=\"character.id\" :class=\"getCharacterStatusClass(character)\">\n            <v-img :src=\"character.image\" class=\"character-image\" alt=\"\"></v-img>\n            <div class=\"info-character\">\n              <h2>{{ character.name }}</h2>\n              <h4>{{ character.species }}</h4>\n              <h4>{{ character.status }}</h4>\n            </div>\n          </v-card>\n        </div>\n      </div>\n\n      <v-data-table v-else :items=\"filterSearch\" \n      :headers=\"headers\" \n      class=\"data\"\n      @pagination=\"scrollToTop\">\n        <template v-slot:item=\"{ item }\">\n          <tr class=\"tr\">\n            <td>\n              <v-img :src=\"item.image\" alt=\"\" class=\"character-imagee\"></v-img>\n            </td>\n            <td>{{ item.name }}</td>\n            <td>{{ item.species }}</td>\n            <td :class=\"getCharacterStatusClass(item)\">{{ item.status }}</td>\n          </tr>\n        </template>\n      </v-data-table>\n    </div>\n  </v-app>\n</template>\n<script>\nimport Loading from '../components/Loading.vue';\nimport axios from 'axios';\n\nexport default {\n  name: 'app',\n  components: {\n    Loading,\n  },\n  data() {\n    return {\n      characters: [],\n      filterSearch: [],\n      isLoading: true,\n      headers: [\n        {\n          text: 'Imagen',\n          value: 'image',\n        },\n        {\n          text: 'Nombre',\n          value: 'name',\n        },\n        {\n          text: 'Especie',\n          value: 'species',\n        },\n        {\n          text: 'Status',\n          value: 'status',\n        },\n      ],\n      viewMode: 'cards',\n      tableView: true,\n    };\n  },\n  mounted() {\n    this.loadCharacters();\n  },\n  methods: {\n    loadCharacters() {\n      axios\n        .get('https://rickandmortyapi.com/api/character')\n        .then(response => {\n          this.characters = response.data.results;\n          this.filterSearch = this.characters;\n          setTimeout(() => {\n            this.isLoading = false;\n          }, 500);\n        })\n        .catch(error => {\n          console.error(error);\n          this.isLoading = false;\n        });\n    },\n    scrollToTop() {\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  },\n    filterCharacters() {\n    this.filterSearch = this.characters.filter(character =>\n      character.name.toLowerCase().includes(this.search.toLowerCase())\n    );\n  },\n    getCharacterStatusClass(character) {\n      if (character.status === 'Alive') {\n        return 'character-green';\n      } else if (character.status === 'Dead') {\n        return 'character-red';\n      } else {\n        return 'character-gray';\n      }\n    },\n    toggleViewMode() {\n      this.viewMode = this.viewMode === 'cards' ? 'table' : 'cards';\n    },\n  },\n};\n</script>\n\n<style scoped>\n.content {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n}\n.v-card {\n  width: 300px;\n  margin: 10px;\n  padding: 10px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.info-character {\n  margin-left: 10px;\n  padding: 10px;\n}\n\nh2 {\n  font-size: 20px;\n  margin-bottom: 5px;\n}\n\nh4 {\n  font-size: 16px;\n  margin-bottom: 5px;\n}\n\n.character-green {\n  background-color: #00C853 !important;\n  color: #ffffff;\n}\n\n.character-red {\n  background-color: red !important;\n  color: #ffffff;\n}\n\n.character-gray {\n  background-color: #9E9E9E !important;\n  color: #ffffff;\n}\n.character-image {\n  width: 100%;\n  height: auto;\n  border-radius: 8px;\n  margin-bottom: 10px;\n}\n.character-imagee {\n  width: 40%;\n  height: auto;\n}\n.data {\n  height: auto;\n  border-radius: 8px;\n  margin-bottom: 10px;\n  width: 100%;\n}\n\n.tr{\n  background-color: whitesmoke;\n}\n\n@media(max-width: 768px){\n    .data{\n      margin: 0 auto; \n\n    }\n}\n\n</style>\n\n\n\n\n\n\n\n"],"mappings":"AAiDA,OAAAA,OAAA;AACA,OAAAC,KAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAH;EACA;EACAI,KAAA;IACA;MACAC,UAAA;MACAC,YAAA;MACAC,SAAA;MACAC,OAAA,GACA;QACAC,IAAA;QACAC,KAAA;MACA,GACA;QACAD,IAAA;QACAC,KAAA;MACA,GACA;QACAD,IAAA;QACAC,KAAA;MACA,GACA;QACAD,IAAA;QACAC,KAAA;MACA,EACA;MACAC,QAAA;MACAC,SAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,cAAA;EACA;EACAC,OAAA;IACAD,eAAA;MACAb,KAAA,CACAe,GAAA,8CACAC,IAAA,CAAAC,QAAA;QACA,KAAAb,UAAA,GAAAa,QAAA,CAAAd,IAAA,CAAAe,OAAA;QACA,KAAAb,YAAA,QAAAD,UAAA;QACAe,UAAA;UACA,KAAAb,SAAA;QACA;MACA,GACAc,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,CAAAA,KAAA;QACA,KAAAf,SAAA;MACA;IACA;IACAiB,YAAA;MACAC,MAAA,CAAAC,QAAA;QAAAC,GAAA;QAAAC,QAAA;MAAA;IACA;IACAC,iBAAA;MACA,KAAAvB,YAAA,QAAAD,UAAA,CAAAyB,MAAA,CAAAC,SAAA,IACAA,SAAA,CAAA7B,IAAA,CAAA8B,WAAA,GAAAC,QAAA,MAAAC,MAAA,CAAAF,WAAA,GACA;IACA;IACAG,wBAAAJ,SAAA;MACA,IAAAA,SAAA,CAAAK,MAAA;QACA;MACA,WAAAL,SAAA,CAAAK,MAAA;QACA;MACA;QACA;MACA;IACA;IACAC,eAAA;MACA,KAAA1B,QAAA,QAAAA,QAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}