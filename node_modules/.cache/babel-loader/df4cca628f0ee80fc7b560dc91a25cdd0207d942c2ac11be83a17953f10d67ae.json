{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      episodes: [],\n      isTableView: true,\n      search: '',\n      filteredEpisodes: []\n    };\n  },\n  mounted() {\n    this.fetchEpisodes();\n  },\n  methods: {\n    fetchEpisodes() {\n      axios.get('https://rickandmortyapi.com/api/episode').then(response => {\n        this.episodes = response.data.results;\n        this.filteredEpisodes = response.data.results;\n      }).catch(error => {\n        console.error(error);\n      });\n    },\n    toggleView() {\n      this.isTableView = !this.isTableView;\n    }\n  },\n  watch: {\n    search() {\n      if (this.isTableView) {\n        this.filteredEpisodes = this.episodes.filter(episode => episode.name.toLowerCase().includes(this.search.toLowerCase()));\n      } else {\n        this.filteredEpisodes = this.episodes.filter(episode => episode.name.toLowerCase().includes(this.search.toLowerCase()));\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","episodes","isTableView","search","filteredEpisodes","mounted","fetchEpisodes","methods","get","then","response","results","catch","error","console","toggleView","watch","filter","episode","name","toLowerCase","includes"],"sources":["src/views/Episodios.vue"],"sourcesContent":["<template>\n  <div class=\"table-container\">\n\n<v-btn-toggle>\n  <button @click=\"toggleView\">\n    <v-tooltip bottom>\n      <template #activator=\"{ on }\">\n        <v-icon class=\"ml-8\" color=\"#263238\" v-on=\"on\">{{ isTableView ? 'mdi-table' : 'mdi-view-grid' }}</v-icon>\n      </template>\n      <span>Cambiar Estilo de Visión</span>\n    </v-tooltip>\n  </button>\n</v-btn-toggle>\n\n    <v-text-field\n      v-model=\"search\"\n      label=\"Search\"\n      class=\"ml-7 mt-5\"\n      outlined\n      color=\"#00C853\"\n    ></v-text-field>\n\n    <div v-if=\"isTableView\" class=\"table-container\">\n      <table>\n        <thead>\n          <tr>\n            <th>Nombre</th>\n            <th>Fecha de emisión</th>\n            <th>Episodio</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"episode in filteredEpisodes\" :key=\"episode.id\">\n            <td>{{ episode.name }}</td>\n            <td>{{ episode.air_date }}</td>\n            <td>{{ episode.episode }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <div v-else class=\"content\">\n      <div class=\"v-card\" v-for=\"episode in filteredEpisodes\" :key=\"episode.id\">\n        <h3>{{ episode.name }}</h3>\n        <p><strong>Fecha de emisión:</strong> {{ episode.air_date }}</p>\n        <p><strong>Episodio:</strong> {{ episode.episode }}</p>\n      </div>\n    </div>\n  </div>\n</template> \n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      episodes: [],\n      isTableView: true,\n      search: '',\n      filteredEpisodes: [],\n    };\n  },\n  mounted() {\n    this.fetchEpisodes();\n  },\n  methods: {\n    fetchEpisodes() {\n      axios.get('https://rickandmortyapi.com/api/episode')\n        .then(response => {\n          this.episodes = response.data.results;\n          this.filteredEpisodes = response.data.results;\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    },\n    toggleView() {\n      this.isTableView = !this.isTableView;\n    },\n  },\n  watch: {\n    search() {\n      if (this.isTableView) {\n        this.filteredEpisodes = this.episodes.filter(episode =>\n          episode.name.toLowerCase().includes(this.search.toLowerCase())\n        );\n      } else {\n        this.filteredEpisodes = this.episodes.filter(episode =>\n          episode.name.toLowerCase().includes(this.search.toLowerCase())\n        );\n      }\n    }\n  },\n};\n</script>\n\n<style scoped>\n\n.table-container {\n  padding: 20px;\n}\n\ntable {\n  width: 100%;\n  border-collapse: collapse;\n}\n\nth, td {\n  padding: 15px;\n  text-align: left;\n  border-bottom: 5px solid #ddd;\n  border-top: 5px solid #ddd;\n  border-left: 5px solid #ddd;\n  border-right: 5px solid #ddd;\n}\n\nth {\n  background-color: #82fe0f;\n}\n\ntr:nth-child(even) {\n  background-color: whitesmoke;\n}\n\ntr:hover {\n  background-color: #A5D6A7;\n}\n.content {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n}\n\n.v-card {\n  width: 300px;\n  margin: 10px;\n  padding: 10px;\n  border: 3.5px solid #00c853;\n  background-color: #E8F5E9;\n  box-sizing: border-box;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\nh2 {\n  font-size: 20px;\n  margin-bottom: 5px;\n}\n\nh4 {\n  font-size: 16px;\n  margin-bottom: 5px;\n}\nh3{\n  font-size: 30px;\n  color: #00C853;\n  font-weight: bold;\n}\n.custom-input input {\n  color: red;\n}\n.tooltip {\n  position: relative;\n  display: inline-block;\n  border-bottom: 1px dotted black; \n}\n\n.tooltip .tooltiptext {\n  visibility: hidden;\n  width: 120px;\n  background-color: black;\n  color: #fff;\n  text-align: center;\n  padding: 5px 0;\n  border-radius: 6px;\n  position: absolute;\n  width: 120px;\n  bottom: 100%;\n  left: 50%;\n  margin-left: -60px;\n}\n\n.tooltip:hover .tooltiptext {\n  visibility: visible;\n  }\n</style>"],"mappings":"AAoDA,OAAAA,KAAA;AAEA;EACAC,KAAA;IACA;MACAC,QAAA;MACAC,WAAA;MACAC,MAAA;MACAC,gBAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,aAAA;EACA;EACAC,OAAA;IACAD,cAAA;MACAP,KAAA,CAAAS,GAAA,4CACAC,IAAA,CAAAC,QAAA;QACA,KAAAT,QAAA,GAAAS,QAAA,CAAAV,IAAA,CAAAW,OAAA;QACA,KAAAP,gBAAA,GAAAM,QAAA,CAAAV,IAAA,CAAAW,OAAA;MACA,GACAC,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,CAAAA,KAAA;MACA;IACA;IACAE,WAAA;MACA,KAAAb,WAAA,SAAAA,WAAA;IACA;EACA;EACAc,KAAA;IACAb,OAAA;MACA,SAAAD,WAAA;QACA,KAAAE,gBAAA,QAAAH,QAAA,CAAAgB,MAAA,CAAAC,OAAA,IACAA,OAAA,CAAAC,IAAA,CAAAC,WAAA,GAAAC,QAAA,MAAAlB,MAAA,CAAAiB,WAAA,GACA;MACA;QACA,KAAAhB,gBAAA,QAAAH,QAAA,CAAAgB,MAAA,CAAAC,OAAA,IACAA,OAAA,CAAAC,IAAA,CAAAC,WAAA,GAAAC,QAAA,MAAAlB,MAAA,CAAAiB,WAAA,GACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}